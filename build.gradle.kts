/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/9.0.0/samples
 */

var stagingFolder = File(project.layout.buildDirectory.get().toString(), "staging")

tasks.register<Zip>("unitFilesZip") {
    description = "Creates zip archives of all the unit file folders."
    group = "build"
    destinationDirectory.set(File(stagingFolder, "mekfiles"))
    archiveFileName.set("unit_files.zip")
    from("data/mekfiles")
}

tasks.register<Zip>("ratZip") {
    description = "Creates a zip archive of all the random assignment tables."
    group = "build"
    from("data/rat")
    destinationDirectory.set(File(stagingFolder, "rat"))
    archiveFileName.set("rat_default.zip")
}

tasks.register<Zip>("canonSystemZip") {
    description = "Creates a zip archive of canon planetary systems."
    group = "build"
    from("data/universe/planetary_systems/canon_systems/")
    destinationDirectory.set(File(stagingFolder, "universe/planetary_systems"))
    archiveFileName.set("canon_systems.zip")
}

tasks.register<Zip>("connectorSystemZip") {
    description = "Creates a zip archive of connector systems planetary systems."
    group = "build"
    from("data/universe/planetary_systems/connector_systems/")
    destinationDirectory.set(File(stagingFolder, "universe/planetary_systems"))
    archiveFileName.set("connector_systems.zip")
}

tasks.register<Copy>("stageMMFiles") {
    description = "Stages files for MM"
    group = "build"

    dependsOn("ratZip")
    dependsOn("unitFilesZip")

    from("data") {
        include("boards/**/*.*")
        include("css/**/*.*")
        include("fonts/**/*.*")
        include("forcegenerator/**/*.*")
        include("images/camo/**/*.*")
        include("images/fluff/**/*.*")
        include("images/hexes/**/*.*")
        include("images/misc/**/*.*")
        include("images/portraits/**/*.*")
        include("images/temp/**/*.*")
        include("images/units/**/*.*")
        include("images/universe/**/*.*")
        include("images/widgets/**/*.*")
        include("mapgen/**/*.*")
        include("mapsetup/**/*.*")
        include("mekfiles/*.txt")
        include("mekfiles/*.xml")
        include("names/**/*.*")
        include("scenarios/**/*.*")
        include("sounds/**/*.*")
        include("universe/eras.xml")
    }

    from(stagingFolder) {
        include("mekfiles/**/*.*")
        include("rat/**/*.*")
    }

    into("${stagingFolder}/mm")
}

tasks.register<Copy>("stageMMLFiles") {
    description = "Stages files for MML"
    group = "build"

    dependsOn("unitFilesZip")

    from("data") {
        include("fonts/**/*.*")
        include("forcegenerator/**/*.*")
        include("images/fluff/**/*.*")
        include("images/misc/**/*.*")
        include("images/recordsheets/**/*.*")
        include("images/units/**/*.*")
        include("images/universe/**/*.*")
        include("images/widgets/**/*.*")
        include("universe/eras.xml")
    }

    from(stagingFolder) {
        include("mekfiles/**/*.*")
    }

    into("${stagingFolder}/mml")
}

tasks.register<Copy>("stageFiles") {
    description = "Stages files for All / MekHQ"
    group = "build"

    mustRunAfter("ratZip")
    mustRunAfter("unitFilesZip")
    mustRunAfter("canonSystemZip")
    mustRunAfter("connectorSystemZip")
    dependsOn("ratZip")
    dependsOn("unitFilesZip")
    dependsOn("canonSystemZip")
    dependsOn("connectorSystemZip")

    from("data") {
        exclude("mekfiles")
        exclude("rat")
        exclude("universe/planetary_systems/canon_systems")
        exclude("universe/planetary_systems/connector_systems")
        include("**/*.*")
    }

    from(stagingFolder) {
        include("mekfiles/**/*.*")
        include("rat/**/*.*")
        include("universe/**/*.*")
    }

    into("${stagingFolder}/all")

}

tasks.register<Delete>("clean") {
    delete(stagingFolder)
}
